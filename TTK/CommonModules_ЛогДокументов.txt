Процедура ПередЗаписьюЛогДокументов(Источник, Отказ, Замещение) Экспорт
	
	Попытка
		Если НЕ Источник.ЭтоНовый() Тогда
			ЛогДокументов(Источник, Источник.Ссылка);
		КонецЕсли;
	Исключение 	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
КонецПопытки;
	
КонецПроцедуры

Процедура ПриЗаписиЛогДокументов(Источник, Отказ, Замещение) Экспорт
	
	Попытка
		Если Источник.ЭтоНовый() ИЛИ РегистрыСведений.ЛогДокументов.СрезПоследних(,Новый Структура("Объект",Источник.Ссылка)).Количество() <= 1 Тогда
			// имеем дело с новым объектом
		ЛогДокументов(Источник, Документы[Источник.Метаданные().Имя].ПустаяСсылка());
		КонецЕсли;
	Исключение 	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
    	
	КонецПопытки;
	
КонецПроцедуры

Процедура ЛогДокументов(Объект, Ссылка) Экспорт
	Перем мМета, мГруппы, мЭлементы, мИмя,  мИспользование, мЗапись;	
	
	//Если Константы.НеВестиЛоги.Получить() Тогда
	//	Возврат;
	//КонецЕсли;

	мМета = Объект.Метаданные();
	
	Если Объект.ПометкаУдаления <> Ссылка.ПометкаУдаления Тогда
		мЗапись = РегистрыСведений.ЛогДокументов.СоздатьМенеджерЗаписи();	
		мЗапись.Период = ТекущаяДата();
		мЗапись.Объект = Объект.Ссылка;
		мЗапись.Пользователь = ИмяПользователя();
		мЗапись.Реквизит = "ПометкаУдаления";
		мЗапись.ЗначениеДо = Ссылка.ПометкаУдаления;
		мЗапись.ЗначениеПосле = Объект.ПометкаУдаления;
		мЗапись.Записать();
	КонецЕсли;	
	Если Объект.Номер <> Ссылка.Номер Тогда
		мЗапись = РегистрыСведений.ЛогДокументов.СоздатьМенеджерЗаписи();	
		мЗапись.Период = ТекущаяДата();
		мЗапись.Объект = Объект.Ссылка;
		мЗапись.Пользователь = ИмяПользователя();
		мЗапись.Реквизит = "Номер";
		мЗапись.ЗначениеДо = Ссылка.Номер;
		мЗапись.ЗначениеПосле = Объект.Номер;
		мЗапись.Записать();
	КонецЕсли;
	Если Объект.Дата <> Ссылка.Дата Тогда
		мЗапись = РегистрыСведений.ЛогДокументов.СоздатьМенеджерЗаписи();	
		мЗапись.Период = ТекущаяДата();
		мЗапись.Объект = Объект.Ссылка;
		мЗапись.Пользователь = ИмяПользователя();
		мЗапись.Реквизит = "Дата";
		мЗапись.ЗначениеДо = Ссылка.Дата;
		мЗапись.ЗначениеПосле = Объект.Дата;
		мЗапись.Записать();
	КонецЕсли;
	
	Для каждого Реквизит Из мМета.Реквизиты Цикл
		мИмя = Реквизит.Имя;				
		Если Объект[мИмя] <> Ссылка[мИмя] Тогда
			мЗапись = РегистрыСведений.ЛогДокументов.СоздатьМенеджерЗаписи();				
			мЗапись.Период = ТекущаяДата();
			мЗапись.Объект = Объект.Ссылка;
			мЗапись.Пользователь = ИмяПользователя();
			мЗапись.Реквизит = мИмя;
			мЗапись.ЗначениеДо = Ссылка[мИмя];
			мЗапись.ЗначениеПосле = Объект[мИмя];
			мЗапись.Записать();
		КонецЕсли;

	КонецЦикла; 		
	
	Если мМета.Имя = "Договор" //ИЛИ мМета.Имя = "ПараметрыСделкиУпр" 
		Тогда      // Названия документов, для которых ведем лог табличных частей
		
	Если Объект.ДатаРасторжения <> Ссылка.ДатаРасторжения Тогда
		мЗаписьР = РегистрыСведений.Расторжения.СоздатьМенеджерЗаписи();
		//мЗаписьР.Объект = Объект.Ссылка;
		мЗаписьР.Период = ТекущаяДата();
		мЗаписьР.Оператор = ИмяПользователя();
		мЗаписьР.Контрагент = Объект.Контрагент;
		мЗаписьР.НомерДоговора = Объект.НомерДоговора;
		мЗаписьР.НомерМГМН = Объект.НомерДоговораМГМН;
		мЗаписьР.НомерВЗ = Объект.НомерДоговораВЗ;
		мЗаписьР.ДатаДоговора = Объект.ДатаДоговора;
		мЗаписьР.ДатаРасторжения = Объект.ДатаРасторжения;
		мЗаписьР.Причина = Объект.Причина;
		мЗаписьР.СуммаДоговора = Объект.СуммаДоговора;
		мЗаписьР.ФормаЮЛ = Объект.ФормаЮЛ;
		мЗаписьР.Записать();
	КонецЕсли;
		
		// Логируем табличные части
		Для каждого мТабличнаяЧасть Из мМета.ТабличныеЧасти Цикл
			мИмяТЧ = мТабличнаяЧасть.Имя;
			ТабличнаяЧасть = Объект[мИмяТЧ];
			ТабличнаяЧастьСсылка = Ссылка[мИмяТЧ];
			
			Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
				НомерСтроки = СтрокаТЧ.НомерСтроки;
				СтрокаТЧСсылка = ?(НомерСтроки <= ТабличнаяЧастьСсылка.Количество(),ТабличнаяЧастьСсылка[НомерСтроки - 1],Неопределено);
				Для каждого Реквизит Из мТабличнаяЧасть.Реквизиты Цикл
					мИмя = Реквизит.Имя;
					Если СтрокаТЧСсылка <> Неопределено Тогда   // Если в ТЧ уже была строка, то сравниваем каждый реквизит
						Если СтрокаТЧ[мИмя] <> СтрокаТЧСсылка[мИмя] Тогда
							мЗапись = РегистрыСведений.ЛогДокументов.СоздатьМенеджерЗаписи();				
							мЗапись.Период = ТекущаяДата();
							мЗапись.Объект = Объект.Ссылка;
							мЗапись.Пользователь = ИмяПользователя();
							мЗапись.Реквизит = мИмяТЧ + "(" + (НомерСтроки) + "): "+ мИмя;
							мЗапись.ЗначениеДо = СтрокаТЧСсылка[мИмя];
							мЗапись.ЗначениеПосле = СтрокаТЧ[мИмя];
							мЗапись.Записать();
						КонецЕсли;
					Иначе                                       // Если в ТЧ не было строки, то записываем все значения реквизитов
						Если ЗначениеЗаполнено(СтрокаТЧ[мИмя]) Тогда
							мЗапись = РегистрыСведений.ЛогДокументов.СоздатьМенеджерЗаписи();				
							мЗапись.Период = ТекущаяДата();
							мЗапись.Объект = Объект.Ссылка;
							мЗапись.Пользователь = ИмяПользователя();
							мЗапись.Реквизит = мИмяТЧ + "(" + (НомерСтроки) + "): "+ мИмя;
							мЗапись.ЗначениеПосле = СтрокаТЧ[мИмя];
							мЗапись.Записать();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
		
		Для каждого мТабличнаяЧасть Из мМета.ТабличныеЧасти Цикл
			мИмяТЧ = мТабличнаяЧасть.Имя;
			ТабличнаяЧасть = Объект[мИмяТЧ];
			ТабличнаяЧастьСсылка = Ссылка[мИмяТЧ];
			
			Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
				НомерСтроки = СтрокаТЧ.НомерСтроки;
				СтрокаТЧСсылка = ?(НомерСтроки <= ТабличнаяЧастьСсылка.Количество(),ТабличнаяЧастьСсылка[НомерСтроки - 1],Неопределено);
				Для каждого Реквизит Из мТабличнаяЧасть.Реквизиты Цикл
					мИмя = Реквизит.Имя;
					Если СтрокаТЧСсылка <> Неопределено Тогда   // Если в ТЧ уже была строка, то сравниваем каждый реквизит
						Если СтрокаТЧ.Услуга <> СтрокаТЧСсылка.Услуга Или Объект.ТипОплаты <> Ссылка.ТипОплаты Тогда
							мЗаписьДУ = РегистрыСведений.РегистрДвиженияУслуг.СоздатьМенеджерЗаписи();				
							мЗаписьДУ.Период = ТекущаяДата();
							мЗаписьДУ.Объект = Объект.Ссылка;
							мЗаписьДУ.Контрагент = Объект.Контрагент;
							мЗаписьДУ.ФормаЮЛ = Объект.ФормаЮЛ;
							мЗаписьДУ.ТипОплатыДо = Ссылка.ТипОплаты;
							мЗаписьДУ.ТипОплатыПосле = Объект.ТипОплаты;
							мЗаписьДУ.Оператор = мИмяТЧ + "(" + (НомерСтроки) + "): "+ ИмяПользователя();
							мЗаписьДУ.ДатаЗаказа = СтрокаТЧ.ДатаЗаказа;
							мЗаписьДУ.УслугаДо = СтрокаТЧСсылка.Услуга;
							мЗаписьДУ.УслугаПосле = СтрокаТЧ.Услуга;
							мЗаписьДУ.СуммаДо = СтрокаТЧСсылка.Сумма;
							мЗаписьДУ.СуммаПосле = СтрокаТЧ.Сумма;
							мЗаписьДУ.Записать();
						КонецЕсли;
							Если СтрокаТЧ.АдресЗаказа <> СтрокаТЧСсылка.АдресЗаказа Тогда
							мЗаписьПУ = РегистрыСведений.ПереносУслуг.СоздатьМенеджерЗаписи();				
							мЗаписьПУ.Период = ТекущаяДата();
							мЗаписьПУ.Объект = Объект.Ссылка;
							мЗаписьПУ.Контрагент = Объект.Контрагент;
							мЗаписьПУ.ФормаЮЛ = Объект.ФормаЮЛ;
							мЗаписьПУ.Оператор = мИмяТЧ + "(" + (НомерСтроки) + "): "+ ИмяПользователя();
							мЗаписьПУ.ДатаЗаказа = СтрокаТЧ.ДатаЗаказа;
							мЗаписьПУ.Услуга = СтрокаТЧ.Услуга;
							мЗаписьПУ.АдресДо = СтрокаТЧСсылка.АдресЗаказа;
							мЗаписьПУ.АдресПосле = СтрокаТЧ.АдресЗаказа;
							мЗаписьПУ.Записать();
						КонецЕсли;
							Если СтрокаТЧ.ДатаБлокировки <> СтрокаТЧСсылка.ДатаБлокировки Тогда
							мЗаписьРУ = РегистрыСведений.РасторжениеУслуг.СоздатьМенеджерЗаписи();				
							мЗаписьРУ.Период = ТекущаяДата();
							мЗаписьРУ.Контрагент = Объект.Контрагент;
							мЗаписьРУ.ФормаЮЛ = Объект.ФормаЮЛ;
							мЗаписьРУ.Оператор = мИмяТЧ + "(" + (НомерСтроки) + "): "+ ИмяПользователя();
							мЗаписьРУ.Услуга = СтрокаТЧ.Услуга;
							мЗаписьРУ.НомерДоговора = Объект.НомерДоговора;
							мЗаписьРУ.ДатаДоговора = Объект.ДатаДоговора;
							мЗаписьРУ.СуммаУслуги = СтрокаТЧ.БезусловнаяСумма;
							мЗаписьРУ.ДатаБлокировки = СтрокаТЧ.ДатаБлокировки;
							мЗаписьРУ.АдресЗаказа = СтрокаТЧ.АдресЗаказа;
							мЗаписьРУ.Записать();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
	КонецЦикла;
КонецЕсли;
	
КонецПроцедуры
