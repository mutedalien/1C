 
 Функция РозничнаяЦена(АктуальнаяДата, ЭлементНоменклатуры) Экспорт
 // Создать вспомогательный объект "Отбор".
 Отбор = Новый Структура("Услуга", ЭлементНоменклатуры);
 // Получить актуальные значения ресурсов регистра.
 ЗначенияРесурсов = РегистрыСведений.Цены.ПолучитьПоследнее(АктуальнаяДата, Отбор);
 Возврат ЗначенияРесурсов.Цена;
КонецФункции

 Функция Скорость(АктуальнаяДата, ЭлементНоменклатуры) Экспорт
 // Создать вспомогательный объект "Отбор".
 Отбор = Новый Структура("Услуга", ЭлементНоменклатуры);
 // Получить актуальные значения ресурсов регистра.
 ЗначенияРесурсов = РегистрыСведений.Цены.ПолучитьПоследнее(АктуальнаяДата, Отбор);
 Возврат ЗначенияРесурсов.Скорость;
КонецФункции

 Функция Лимит(АктуальнаяДата, ЭлементНоменклатуры) Экспорт
 // Создать вспомогательный объект "Отбор".
 Отбор = Новый Структура("Услуга", ЭлементНоменклатуры);
 // Получить актуальные значения ресурсов регистра.
 ЗначенияРесурсов = РегистрыСведений.Цены.ПолучитьПоследнее(АктуальнаяДата, Отбор);
 Возврат ЗначенияРесурсов.Лимит;
КонецФункции

Функция СверхЛимита(АктуальнаяДата, ЭлементНоменклатуры) Экспорт
 // Создать вспомогательный объект "Отбор".
 Отбор = Новый Структура("Услуга", ЭлементНоменклатуры);
 // Получить актуальные значения ресурсов регистра.
 ЗначенияРесурсов = РегистрыСведений.Цены.ПолучитьПоследнее(АктуальнаяДата, Отбор);
 Возврат ЗначенияРесурсов.СверхЛимита;
КонецФункции

 Функция Мощность(АктуальнаяДата, ЭлементНоменклатуры) Экспорт
 // Создать вспомогательный объект "Отбор".
 Отбор = Новый Структура("Железо", ЭлементНоменклатуры);
 // Получить актуальные значения ресурсов регистра.
 ЗначенияРесурсов = РегистрыСведений.ПотреблениеЭл.ПолучитьПоследнее(АктуальнаяДата, Отбор);
 Возврат ЗначенияРесурсов.Мощность;
КонецФункции

Функция ЗагрузкаКонтрагентовИзExcel(ИмяФайла) Экспорт
    //Номер листа в книге Excel для получения данных
    НомерЛиста         = 1;
    //Пытаемся подключиться к Excel
    Попытка
        Excel = новый COMОбъект("Excel.Application");
    Исключение
        Сообщить("Похоже, Excel на компьютере не установлен. Необходимо выполнить установку/переустановку Excel.");
        Возврат Ложь;
    КонецПопытки;     
    //Подключились удачно, открываем файл
    Excel.Workbooks.Open(ИмяФайла);
    //Открываем необходимый лист
    Excel.Sheets(НомерЛиста).select();   
    //Получим количество строк и колонок.
    //В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel
    Версия = Лев(Excel.Version,Найти(Excel.Version,".")-1);
    Если Версия = "8" тогда
        ФайлСтрок   = Excel.Cells.CurrentRegion.Rows.Count;
        ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
    Иначе
        ФайлСтрок   = Excel.Cells(1,1).SpecialCells(11).Row;
        ФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column;   
    Конецесли;
    // Выбираем данные из файла
	ТЗ = Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("НомерДоговора");
	//ТЗ.Колонки.Добавить("КонтрагентНаименование");
    Для а = 3 по ФайлСтрок Цикл           
        //Получим данные из соответсвующих ячеек
		
		//НоваяСтрока = ТЗ.Добавить();
		////НоваяСтрока.НомерДоговора = 
		//НоваяСтрока.КонтрагентНаименование = СокрЛП(Excel.Cells(а,3).Value)
		
        Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
        Контрагент.Наименование = СокрЛП(Excel.Cells(а,3).Value);
		Контрагент.ФормаЮЛ = СокрЛП(Excel.Cells(а,9).Value);
		//Контрагент.КодЕИСУП = СокрЛП(Excel.Cells(а,2).Value);
        Контрагент.ЮрАдрес = "" + Excel.Cells(а,5).Value + "" +Excel.Cells(а,6).Value+"" + "" +Excel.Cells(а,7).Value + "" + "" +Excel.Cells(а,8).Value + "";
		Контрагент.ПочтАдрес = "" + Excel.Cells(а,5).Value + "" +Excel.Cells(а,6).Value+"" + "" +Excel.Cells(а,7).Value + "" + "" +Excel.Cells(а,8).Value + "";
		//Контрагент.НомерЗакладной = СтрЗаменить(СокрЛП(Excel.Cells(а,3).Value),Символы.НПП,"");
		//Контрагент.ФИО = СокрЛП(Excel.Cells(а,4).Value);
		//Если СокрЛП(Excel.Cells(а,5).Value)="Да" Тогда
		//	Контрагент.ОсновнойКонтрагент = Истина;
		//Иначе 
		//	Контрагент.ОсновнойКонтрагент = Ложь;
		//КонецЕсли;    
        Контрагент.Записать();
    Конеццикла;
    //Закрываем Excel
    Excel.ActiveWorkbook.Close(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договор.НомерДоговора
		|ИЗ
		|	Документ.Договор КАК Договор
		|ГДЕ
		|	Договор.Контрагент.Наименование = &Наименование
		|	И НЕ Договор.ПометкаУдаления";
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		
		Запрос.УстановитьПараметр("Наименование", СтрокаТЗ.КонтрагентНаименование);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		//создаем договор

	КонецЦикла;
КонецФункции    

Функция ЗагрузкаСегментовИзExcel(ИмяФайла) Экспорт
    //Номер листа в книге Excel для получения данных
    НомерЛиста         = 1;
    //Пытаемся подключиться к Excel
    Попытка
        Excel = новый COMОбъект("Excel.Application");
    Исключение
        Сообщить("Похоже, Excel на компьютере не установлен. Необходимо выполнить установку/переустановку Excel.");
        Возврат Ложь;
    КонецПопытки;     
    //Подключились удачно, открываем файл
    Excel.Workbooks.Open(ИмяФайла);
    //Открываем необходимый лист
    Excel.Sheets(НомерЛиста).select();   
    //Получим количество строк и колонок.
    //В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel
    Версия = Лев(Excel.Version,Найти(Excel.Version,".")-1);
    Если Версия = "8" тогда
        ФайлСтрок   = Excel.Cells.CurrentRegion.Rows.Count;
        ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
    Иначе
        ФайлСтрок   = Excel.Cells(1,1).SpecialCells(11).Row;
        ФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column;   
    Конецесли;
    // Выбираем данные из файла
    Для а = 3 по ФайлСтрок Цикл           
        //Получим данные из соответсвующих ячеек
        Сегмент = Справочники.СегментыСети.СоздатьЭлемент();
        Сегмент.Наименование = СокрЛП(Excel.Cells(а,1).Value);
	    Сегмент.Записать();
    Конеццикла;
    //Закрываем Excel
    Excel.ActiveWorkbook.Close();   
КонецФункции    
